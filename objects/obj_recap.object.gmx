<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>title = load_string_json(global.language, "highscore_title")
save = load_string_json(global.language, "highscore_save")
discard = load_string_json(global.language, "highscore_gotohome")

minutes = obj_timer.minutes*60
seconds = obj_timer.seconds
graal = global.graal*30

sel = 0

margin = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kDownRel     = keyboard_check_released(vk_down) || (gamepad_axis_value(0,gp_axislv) &gt; 0) || gamepad_button_check_released(0,gp_padd);
kUpRel       = keyboard_check_released(vk_up)|| (gamepad_axis_value(0,gp_axislv) &lt; 0) || gamepad_button_check_released(0,gp_padu);
kEnterRel    = keyboard_check_released(vk_enter) || keyboard_check_released(ord("Z")) || (gamepad_button_check_pressed(0,gp_face1));

if (kDownRel) {
    sel=1;
    audio_play_sound(snd_menu_mov, 10, false);
}

if (kUpRel) {
    sel=0;
    audio_play_sound(snd_menu_mov, 10, false);
}

if (kEnterRel &amp;&amp; sel==0) {
    audio_play_sound(snd_sel, 10, false);
    instance_create(x,y,obj_OS_name)
    instance_destroy()       
}

if (kEnterRel &amp;&amp; sel==1) {
    audio_play_sound(snd_sel, 10, false);
    with obj_timer {
        instance_destroy()
    }
    with obj_parent_map_element {
        instance_destroy()
    }
    with obj_graalCounter {
        instance_destroy()
    }
    room_goto(rm_menu)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_8bit_story)
draw_set_colour(c_white)
draw_set_valign(fa_center)

draw_set_halign(fa_center)
draw_text(room_width/2, 20, title);

draw_set_font(fnt_8bit_story)
draw_set_halign(fa_left)
draw_text(margin, 40, "Time");
draw_sprite(spr_graal, 0, margin+3, 50);
draw_text(margin*3 - 2, 50, "x30");
draw_text(margin, 70, "Time - ");
draw_sprite(spr_graal, 0, margin*9 + 5, 70);
draw_text(margin*10+5, 70, "x30 ");

draw_set_halign(fa_right)
draw_text(room_width - margin, 40, minutes + seconds);
draw_text(room_width - margin, 50, graal);
draw_set_colour(c_green)
draw_text(room_width - margin, 70, minutes + seconds - graal);

draw_set_halign(fa_center)
if (sel==0) {
    draw_rectangle_colour(20, 85, 108, 95, c_white, c_white, c_white, c_white, false); 
    draw_set_colour(c_black)
    draw_text(room_width/2, 90, save);
    draw_set_colour(c_white)
    draw_text(room_width/2, 105, discard);
}
if (sel==1) {
    draw_rectangle_colour(20, 100, 108, 110, c_white, c_white, c_white, c_white, false); 
    draw_set_colour(c_white)
    draw_text(room_width/2, 90, save);
    draw_set_colour(c_black)
    draw_text(room_width/2, 105, discard);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
