<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text = load_string_json(global.language, "add_highscore")

alphabet[0] = "a";
alphabet[1] = "b";
alphabet[2] = "c";
alphabet[3] = "d";
alphabet[4] = "e";
alphabet[5] = "f";
alphabet[6] = "g";
alphabet[7] = "h";
alphabet[8] = "i";
alphabet[9] = "j";
alphabet[10] = "k";
alphabet[11] = "l";
alphabet[12] = "m";
alphabet[13] = "n";
alphabet[14] = "o";
alphabet[15] = "p";
alphabet[16] = "q";
alphabet[17] = "r";
alphabet[18] = "s";
alphabet[19] = "t";
alphabet[20] = "u";
alphabet[21] = "v";
alphabet[22] = "w";
alphabet[23] = "x";
alphabet[24] = "y";
alphabet[25] = "z";
alphabet[26] = "0";
alphabet[27] = "1";
alphabet[28] = "2";
alphabet[29] = "3";
alphabet[30] = "4";
alphabet[31] = "5";
alphabet[32] = "6";
alphabet[33] = "7";
alphabet[34] = "8";
alphabet[35] = "9";
alphabet[36] = " ";

char1=alphabet
char2=alphabet
char3=alphabet
char4=alphabet
char5=alphabet

i1=0
i2=0
i3=0
i4=0
i5=0

pos=1

vpos = room_height/2 + 10
xdist = room_width/7

txt_margin = xdist-5

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,obj_highscore)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_released(vk_right) {
    pos+=1
}

if keyboard_check_released(vk_left) {
    pos-=1
}

if pos&lt;1 pos=1
if pos&gt;5 pos=5

switch (pos) {
    case (1):
        if keyboard_check_released(vk_up) {
            i1+=1
        }

        if keyboard_check_released(vk_down) {
            i1-=1
        }
        if i1&lt;0 i1=array_length_1d(char1)-1
        if i1&gt;array_length_1d(char1)-1 i1=0
        break;
    case (2):
        if keyboard_check_released(vk_up) {
            i2+=1
        }

        if keyboard_check_released(vk_down) {
            i2-=1
        }
        if i2&lt;0 i2=array_length_1d(char2)-1
        if i2&gt;array_length_1d(char2)-1 i2=0
        break; 
    case (3):
        if keyboard_check_released(vk_up) {
            i3+=1
        }

        if keyboard_check_released(vk_down) {
            i3-=1
        }
        if i3&lt;0 i3=array_length_1d(char3)-1
        if i3&gt;array_length_1d(char3)-1 i3=0
        break; 
    case (4):
        if keyboard_check_released(vk_up) {
            i4+=1
        }

        if keyboard_check_released(vk_down) {
            i4-=1
        }
        if i4&lt;0 i4=array_length_1d(char4)-1
        if i4&gt;array_length_1d(char4)-1 i4=0
        break;
    case (5):
        if keyboard_check_released(vk_up) {
            i5+=1
        }

        if keyboard_check_released(vk_down) {
            i5-=1
        }
        if i5&lt;0 i5=array_length_1d(char5)-1
        if i5&gt;array_length_1d(char5)-1 i5=0
        break; 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white)
draw_set_font(fnt_8bit_story)
draw_set_halign(fa_left)
draw_set_valign(fa_top)
draw_text_ext(txt_margin, txt_margin, text, txt_margin, room_width-2*txt_margin);

draw_set_font(fnt_8bit)

switch(pos) {
    case(1):
        draw_set_colour(c_red)
        draw_text(xdist,vpos, char1[i1])
        draw_set_color(c_white)
        draw_text(xdist*2,vpos, char2[i2])
        draw_text(xdist*3,vpos, char3[i3])
        draw_text(xdist*4,vpos, char4[i4])
        draw_text(xdist*5,vpos, char5[i5])
        break;
    case(2):
        draw_set_colour(c_white)
        draw_text(xdist,vpos, char1[i1])
        draw_set_color(c_red)
        draw_text(xdist*2,vpos, char2[i2])
        draw_set_colour(c_white)
        draw_text(xdist*3,vpos, char3[i3])
        draw_text(xdist*4,vpos, char4[i4])
        draw_text(xdist*5,vpos, char5[i5])
        break;
    case(3):
        draw_set_colour(c_white)
        draw_text(xdist,vpos, char1[i1])
        draw_text(xdist*2,vpos, char2[i2])
        draw_set_color(c_red)
        draw_text(xdist*3,vpos, char3[i3])
        draw_set_colour(c_white)
        draw_text(xdist*4,vpos, char4[i4])
        draw_text(xdist*5,vpos, char5[i5])
        break;
    case(4):
        draw_set_colour(c_white)
        draw_text(xdist,vpos, char1[i1])
        draw_text(xdist*2,vpos, char2[i2])
        draw_text(xdist*3,vpos, char3[i3])
        draw_set_color(c_red)
        draw_text(xdist*4,vpos, char4[i4])
        draw_set_colour(c_white)
        draw_text(xdist*5,vpos, char5[i5])
        break;
    case(5):
        draw_set_colour(c_white)
        draw_text(xdist,vpos, char1[i1])
        draw_text(xdist*2,vpos, char2[i2])
        draw_text(xdist*3,vpos, char3[i3])
        draw_text(xdist*4,vpos, char4[i4])
        draw_set_color(c_red)
        draw_text(xdist*5,vpos, char5[i5])
        draw_set_colour(c_white)
        break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>message = string(char1[i1]+char2[i2]+char3[i3]+char4[i4]+char5[i5])

if (message!="") {
    global.name=message
    send_score(message, obj_timer.minutes*60 + obj_timer.seconds - global.graal*30);
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
