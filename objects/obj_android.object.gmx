<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//window_set_colour(c_gray)
a = application_get_position();
xx = a[0];
yy = a[1];
ww = a[2] - a[0];
hh = a[3] - a[1];

margin = 40
//btn_dim = sprite_get_width(spr_arrow_up)*mul
btn_dim = (xx - 2*margin) / 3;
mul = btn_dim / sprite_get_width(spr_arrow_up)






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_maximise(); 

//UP
pos_up_x = margin + btn_dim
pos_up_y = display_get_height() - margin - btn_dim*3

draw_sprite_ext(spr_arrow_up, image_index, pos_up_x, pos_up_y, mul, mul, image_angle, image_blend, image_alpha);
virtual_key_add(pos_up_x, pos_up_y, btn_dim, btn_dim, vk_up); 

//DOWN
pos_down_x = pos_up_x
pos_down_y = display_get_height() - margin - btn_dim

draw_sprite_ext(spr_arrow_down, image_index, pos_down_x, pos_down_y, mul, mul, image_angle, image_blend, image_alpha);
virtual_key_add(pos_down_x, pos_down_y, btn_dim, btn_dim, vk_down); 

//LEFT
pos_left_x = margin
pos_left_y = display_get_height() - margin - btn_dim*2
draw_sprite_ext(spr_arrow_left, image_index, pos_left_x, pos_left_y, mul, mul, image_angle, image_blend, image_alpha);
virtual_key_add(pos_left_x, pos_left_y, btn_dim, btn_dim, vk_left); 

//RIGHT
pos_right_x = margin + btn_dim*2
pos_right_y = pos_left_y
draw_sprite_ext(spr_arrow_right, image_index, pos_right_x, pos_right_y, mul, mul, image_angle, image_blend, image_alpha);
virtual_key_add(pos_right_x, pos_right_y, btn_dim, btn_dim, vk_right); 

//Z
pos_btnz_x = display_get_width() - 2*margin - btn_dim
pos_btnz_y = pos_left_y
draw_sprite_ext(spr_z_btn, image_index,pos_btnz_x, pos_btnz_y, mul, mul, image_angle, image_blend, image_alpha);
virtual_key_add(pos_btnz_x, pos_btnz_y, btn_dim, btn_dim, ord("Z")); 

//X
pos_btnz_x = display_get_width() - 2*margin - btn_dim*2.5
pos_btnz_y = pos_left_y
draw_sprite_ext(spr_x_btn, image_index,pos_btnz_x, pos_btnz_y, mul, mul, image_angle, image_blend, image_alpha);
virtual_key_add(pos_btnz_x, pos_btnz_y, btn_dim, btn_dim, ord("X"));

//ESC
pos_btnz_x = display_get_width() - 2*margin - btn_dim*1.5
pos_btnz_y = margin*3
draw_sprite_ext(spr_esc_btn, image_index,pos_btnz_x, pos_btnz_y, mul, mul, image_angle, image_blend, image_alpha);
virtual_key_add(pos_btnz_x, pos_btnz_y, btn_dim, btn_dim, vk_escape); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_colour(c_red)
//draw_text(10,10, string(os_type))
//draw_text(10,30, yy)
//draw_text(10,50, ww)
//draw_text(10,70, hh)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
