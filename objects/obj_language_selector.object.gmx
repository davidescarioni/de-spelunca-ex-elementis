<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepad_set_axis_deadzone(0,0.7)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kUp          = keyboard_check_pressed(vk_up) || (gamepad_axis_value(0,gp_axislv) &lt; 0) || gamepad_button_check_released(0,gp_padu);
kDown        = keyboard_check_pressed(vk_down) || (gamepad_axis_value(0,gp_axislv) &gt; 0) || gamepad_button_check_released(0,gp_padd);
kEnter       = keyboard_check_pressed(vk_enter) || keyboard_check_pressed(ord("Z")) || (gamepad_button_check_pressed(0,gp_face1));

if (kEnter) {
    if (obj_ita.sel==true) {
        global.language="ita"
    } else {
        global.language="eng"
    }
    
    var fade = instance_create(x,y,obj_fade)
    with fade {
        rm_to_go=rm_story
    }
    
    audio_play_sound(snd_sel, 10, false);
}

if (kUp &amp;&amp; obj_ita.sel!=true) {
    obj_ita.sel=true
    obj_eng.sel=false
    audio_play_sound(snd_menu_mov, 10, false);
}

if (kDown &amp;&amp; obj_ita.sel!=false) {
    obj_ita.sel=false
    obj_eng.sel=true
    audio_play_sound(snd_menu_mov, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
